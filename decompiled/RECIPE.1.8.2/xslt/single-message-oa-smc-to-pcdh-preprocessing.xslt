<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://www.apb.be/standards/smoa/schema/v1" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="ns0 xs fn">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_singlemessage" as="node()?" select="ns0:single-message"/>
		<single-message xmlns="http://www.apb.be/standards/smoa/schema/v1" xmlns:code="http://www.apb.be/standards/smoa/schema/code/v1" xmlns:id="http://www.apb.be/standards/smoa/schema/id/v1" xmlns:model="http://www.apb.be/standards/smoa/schema/model/v1" xmlns:CD="http://www.ehealth.fgov.be/standards/kmehr/cd/v1" xmlns:DT="http://www.ehealth.fgov.be/standards/kmehr/dt/v1" xmlns:ID="http://www.ehealth.fgov.be/standards/kmehr/id/v1" xmlns:kmehr="http://www.ehealth.fgov.be/standards/kmehr/schema/v1" xmlns:sig="http://www.w3.org/2000/09/xmldsig#" xmlns:enc="http://www.w3.org/2001/04/xmlenc#">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.apb.be/standards/smoa/schema/v1 xsd/smc-v1/single-message/maindoc/single-message-oa-1.0.xsd'"/>
			<unsigned>
				<xsl:for-each select="$var1_singlemessage/ns0:signed">
					<xsl:variable name="var2_resultof_first" as="node()" select="ns0:message/ns0:header"/>
					<header>
						<xsl:sequence select="($var2_resultof_first/@node(), $var2_resultof_first/node())"/>
					</header>
				</xsl:for-each>
				<xsl:for-each select="$var1_singlemessage/ns0:signed/ns0:message/ns0:eventFolder">
					<eventFolder>
						<xsl:sequence select="(./@node(), ./node())"/>
					</eventFolder>
				</xsl:for-each>
			</unsigned>
			<signed>
				<xsl:for-each select="$var1_singlemessage/ns0:signed">
					<xsl:variable name="var3_resultof_first" as="node()" select="ns0:signature"/>
					<signature>
						<xsl:sequence select="($var3_resultof_first/@node(), $var3_resultof_first/node())"/>
					</signature>
				</xsl:for-each>
			</signed>
		</single-message>
	</xsl:template>
</xsl:stylesheet>
